version: "3.9"

# Re-use common podman options (mainly SELinux)
x-common-opts: &common-opts
  security_opt:
    - label=disable

volumes:
  kafka-data:
  mysql-data:
  cassandra-data:

networks:
  default:
    name: leaderboard-net
    driver: bridge

services:

  zookeeper:
    <<: *common-opts
    image: odo-docker-signed-local.artifactory-builds.oci.oraclecorp.com/zookeeper:081220220604
    container_name: zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    <<: *common-opts
    image: odo-docker-signed-local.artifactory-builds.oci.oraclecorp.com/kafka:OCI_25.3.1.0.3
    container_name: kafka
    depends_on:
      - zookeeper
    restart: unless-stopped
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # Expose one listener for host (localhost) and one for container-to-container traffic
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    ports:
      - "9092:9092"
      - "29092:29092"
    volumes:
      - kafka-data:/var/lib/kafka/data

  schema-registry:
    <<: *common-opts
    image: sa-gateway-management-dev-docker-local.artifactory-builds.oci.oraclecorp.com/schema-registry:0.0.48
    container_name: schema-registry
    depends_on:
      - kafka
    restart: unless-stopped
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: INTERNAL://kafka:29092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    ports:
      - "8081:8081"

  mysql:
    <<: *common-opts
    image: oicng-docker-local.artifactory-builds.oci.oraclecorp.com/mysql:5.7
    container_name: mysql
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root            # change for real use
      MYSQL_DATABASE: leaderboard
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql

  cassandra:
    <<: *common-opts
    image: odo-docker-signed-local.artifactory-builds.oci.oraclecorp.com/cassandra:0.1-cassandra_4-0-6.1
    container_name: cassandra
    ports:
      - "9042:9042"     # CQL
      - "7199:7199"     # JMX (nodetool)
    environment:
      JVM_EXTRA_OPTS: "-XX:-UnlockDiagnosticVMOptions"
      # ── required ─────────────────────────────────────────────
      CASSANDRA_SEEDS: 127.0.0.1                 # self, single-node
      CASSANDRA_LISTEN_ADDRESS: 0.0.0.0         # where it listens
      CASSANDRA_BROADCAST_ADDRESS: c127.0.0.1ssandra     # what it advertises to peers
      CASSANDRA_RPC_ADDRESS: 0.0.0.0             # listen on all IFs
      CASSANDRA_BROADCAST_RPC_ADDRESS: 127.0.0.1 # advertise concrete name

      # ── optional but helpful ────────────────────────────────
      LOCAL_JMX: "yes"           # so nodetool works without extra opts
      CASSANDRA_CLUSTER_NAME: dev-cluster
      MAX_HEAP_SIZE: 1G
      HEAP_NEWSIZE: 256M
    volumes:
      - cassandra-data:/var/lib/cassandra

  # kafka-ui:
  #   <<: *common-opts
  #   image: quay.io/provectuslabs/kafka-ui:v0.7.2
  #   container_name: kafka-ui
  #   depends_on:
  #     - kafka
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: local
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
  #     KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
  #     DYNAMIC_CONFIG_ENABLED: "true"
  #   ports:
  #     - "8080:8080"