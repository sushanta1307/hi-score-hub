// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: score_update.proto
// Protobuf C++ Version: 6.33.0

#include "score_update.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace leaderboard {

inline constexpr ScoreUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        leaderboard_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        score_{::int64_t{0}},
        timestamp_ms_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR ScoreUpdate::ScoreUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ScoreUpdate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ScoreUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScoreUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScoreUpdateDefaultTypeInternal() {}
  union {
    ScoreUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScoreUpdateDefaultTypeInternal _ScoreUpdate_default_instance_;
}  // namespace leaderboard
static constexpr const ::_pb::EnumDescriptor* PROTOBUF_NONNULL* PROTOBUF_NULLABLE
    file_level_enum_descriptors_score_5fupdate_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor* PROTOBUF_NONNULL* PROTOBUF_NULLABLE
    file_level_service_descriptors_score_5fupdate_2eproto = nullptr;
const ::uint32_t
    TableStruct_score_5fupdate_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::leaderboard::ScoreUpdate, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::leaderboard::ScoreUpdate, _impl_.leaderboard_id_),
        PROTOBUF_FIELD_OFFSET(::leaderboard::ScoreUpdate, _impl_.player_id_),
        PROTOBUF_FIELD_OFFSET(::leaderboard::ScoreUpdate, _impl_.score_),
        PROTOBUF_FIELD_OFFSET(::leaderboard::ScoreUpdate, _impl_.timestamp_ms_),
        0,
        1,
        2,
        3,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::leaderboard::ScoreUpdate)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::leaderboard::_ScoreUpdate_default_instance_._instance,
};
const char descriptor_table_protodef_score_5fupdate_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\022score_update.proto\022\013leaderboard\"]\n\013Sco"
    "reUpdate\022\026\n\016leaderboard_id\030\001 \001(\t\022\021\n\tplay"
    "er_id\030\002 \001(\t\022\r\n\005score\030\003 \001(\003\022\024\n\014timestamp_"
    "ms\030\004 \001(\003B!\n\035com.example.leaderboard.prot"
    "oP\001b\006proto3"
};
static ::absl::once_flag descriptor_table_score_5fupdate_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_score_5fupdate_2eproto = {
    false,
    false,
    171,
    descriptor_table_protodef_score_5fupdate_2eproto,
    "score_update.proto",
    &descriptor_table_score_5fupdate_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_score_5fupdate_2eproto::offsets,
    file_level_enum_descriptors_score_5fupdate_2eproto,
    file_level_service_descriptors_score_5fupdate_2eproto,
};
namespace leaderboard {
// ===================================================================

class ScoreUpdate::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ScoreUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ScoreUpdate, _impl_._has_bits_);
};

ScoreUpdate::ScoreUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ScoreUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:leaderboard.ScoreUpdate)
}
PROTOBUF_NDEBUG_INLINE ScoreUpdate::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::leaderboard::ScoreUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        leaderboard_id_(arena, from.leaderboard_id_),
        player_id_(arena, from.player_id_) {}

ScoreUpdate::ScoreUpdate(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ScoreUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ScoreUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ScoreUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, score_),
           reinterpret_cast<const char*>(&from._impl_) +
               offsetof(Impl_, score_),
           offsetof(Impl_, timestamp_ms_) -
               offsetof(Impl_, score_) +
               sizeof(Impl_::timestamp_ms_));

  // @@protoc_insertion_point(copy_constructor:leaderboard.ScoreUpdate)
}
PROTOBUF_NDEBUG_INLINE ScoreUpdate::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        leaderboard_id_(arena),
        player_id_(arena) {}

inline void ScoreUpdate::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, score_),
           0,
           offsetof(Impl_, timestamp_ms_) -
               offsetof(Impl_, score_) +
               sizeof(Impl_::timestamp_ms_));
}
ScoreUpdate::~ScoreUpdate() {
  // @@protoc_insertion_point(destructor:leaderboard.ScoreUpdate)
  SharedDtor(*this);
}
inline void ScoreUpdate::SharedDtor(MessageLite& self) {
  ScoreUpdate& this_ = static_cast<ScoreUpdate&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.leaderboard_id_.Destroy();
  this_._impl_.player_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ScoreUpdate::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ScoreUpdate(arena);
}
constexpr auto ScoreUpdate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ScoreUpdate),
                                            alignof(ScoreUpdate));
}
constexpr auto ScoreUpdate::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ScoreUpdate_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ScoreUpdate::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ScoreUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ScoreUpdate::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ScoreUpdate>(), &ScoreUpdate::ByteSizeLong,
              &ScoreUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ScoreUpdate, _impl_._cached_size_),
          false,
      },
      &ScoreUpdate::kDescriptorMethods,
      &descriptor_table_score_5fupdate_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ScoreUpdate_class_data_ =
        ScoreUpdate::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ScoreUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ScoreUpdate_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ScoreUpdate_class_data_.tc_table);
  return ScoreUpdate_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 55, 2>
ScoreUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ScoreUpdate, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ScoreUpdate_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::leaderboard::ScoreUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 timestamp_ms = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ScoreUpdate, _impl_.timestamp_ms_), 3>(),
     {32, 3, 0,
      PROTOBUF_FIELD_OFFSET(ScoreUpdate, _impl_.timestamp_ms_)}},
    // string leaderboard_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0,
      PROTOBUF_FIELD_OFFSET(ScoreUpdate, _impl_.leaderboard_id_)}},
    // string player_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0,
      PROTOBUF_FIELD_OFFSET(ScoreUpdate, _impl_.player_id_)}},
    // int64 score = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ScoreUpdate, _impl_.score_), 2>(),
     {24, 2, 0,
      PROTOBUF_FIELD_OFFSET(ScoreUpdate, _impl_.score_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string leaderboard_id = 1;
    {PROTOBUF_FIELD_OFFSET(ScoreUpdate, _impl_.leaderboard_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string player_id = 2;
    {PROTOBUF_FIELD_OFFSET(ScoreUpdate, _impl_.player_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 score = 3;
    {PROTOBUF_FIELD_OFFSET(ScoreUpdate, _impl_.score_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 timestamp_ms = 4;
    {PROTOBUF_FIELD_OFFSET(ScoreUpdate, _impl_.timestamp_ms_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\27\16\11\0\0\0\0\0"
    "leaderboard.ScoreUpdate"
    "leaderboard_id"
    "player_id"
  }},
};
PROTOBUF_NOINLINE void ScoreUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:leaderboard.ScoreUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.leaderboard_id_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      _impl_.player_id_.ClearNonDefaultToEmpty();
    }
  }
  if (BatchCheckHasBit(cached_has_bits, 0x0000000cU)) {
    ::memset(&_impl_.score_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.timestamp_ms_) -
        reinterpret_cast<char*>(&_impl_.score_)) + sizeof(_impl_.timestamp_ms_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ScoreUpdate::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ScoreUpdate& this_ = static_cast<const ScoreUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ScoreUpdate::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ScoreUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:leaderboard.ScoreUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // string leaderboard_id = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_leaderboard_id().empty()) {
      const ::std::string& _s = this_._internal_leaderboard_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "leaderboard.ScoreUpdate.leaderboard_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string player_id = 2;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (!this_._internal_player_id().empty()) {
      const ::std::string& _s = this_._internal_player_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "leaderboard.ScoreUpdate.player_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int64 score = 3;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    if (this_._internal_score() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_score(), target);
    }
  }

  // int64 timestamp_ms = 4;
  if (CheckHasBit(cached_has_bits, 0x00000008U)) {
    if (this_._internal_timestamp_ms() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<4>(
              stream, this_._internal_timestamp_ms(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:leaderboard.ScoreUpdate)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ScoreUpdate::ByteSizeLong(const MessageLite& base) {
  const ScoreUpdate& this_ = static_cast<const ScoreUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ScoreUpdate::ByteSizeLong() const {
  const ScoreUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:leaderboard.ScoreUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000000fU)) {
    // string leaderboard_id = 1;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_leaderboard_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_leaderboard_id());
      }
    }
    // string player_id = 2;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!this_._internal_player_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_player_id());
      }
    }
    // int64 score = 3;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (this_._internal_score() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_score());
      }
    }
    // int64 timestamp_ms = 4;
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      if (this_._internal_timestamp_ms() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_timestamp_ms());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ScoreUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<ScoreUpdate*>(&to_msg);
  auto& from = static_cast<const ScoreUpdate&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:leaderboard.ScoreUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000000fU)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_leaderboard_id().empty()) {
        _this->_internal_set_leaderboard_id(from._internal_leaderboard_id());
      } else {
        if (_this->_impl_.leaderboard_id_.IsDefault()) {
          _this->_internal_set_leaderboard_id("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!from._internal_player_id().empty()) {
        _this->_internal_set_player_id(from._internal_player_id());
      } else {
        if (_this->_impl_.player_id_.IsDefault()) {
          _this->_internal_set_player_id("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (from._internal_score() != 0) {
        _this->_impl_.score_ = from._impl_.score_;
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      if (from._internal_timestamp_ms() != 0) {
        _this->_impl_.timestamp_ms_ = from._impl_.timestamp_ms_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void ScoreUpdate::CopyFrom(const ScoreUpdate& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:leaderboard.ScoreUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ScoreUpdate::InternalSwap(ScoreUpdate* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.leaderboard_id_, &other->_impl_.leaderboard_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.player_id_, &other->_impl_.player_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScoreUpdate, _impl_.timestamp_ms_)
      + sizeof(ScoreUpdate::_impl_.timestamp_ms_)
      - PROTOBUF_FIELD_OFFSET(ScoreUpdate, _impl_.score_)>(
          reinterpret_cast<char*>(&_impl_.score_),
          reinterpret_cast<char*>(&other->_impl_.score_));
}

::google::protobuf::Metadata ScoreUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace leaderboard
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_score_5fupdate_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
